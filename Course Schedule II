210. Course Schedule II
class Solution {
public:
    vector<int> findOrder(int n, vector<vector<int>>& prerequisites) {
        vector<int>indegree(n, 0);
        unordered_map<int, vector<int>>adj;

        for(auto vec:prerequisites )
        {
            int a=vec[0];
            int b=vec[1];
            
            adj[b].push_back(a);
            indegree[a]++;
        }
        vector<int> result;
        int count=0;
        queue<int> q;
          
          for(int i =0 ; i< n ; i++)
          {
            if(indegree[i]==0)
            {
                q.push(i);
                count++;
                result.push_back(i);
            }
          }

          while(!q.empty())
          {
            int u= q.front();
            q.pop();
            for(auto v: adj[u])
            {   
                indegree[v]--;
                if(indegree[v]==0)
                {
                q.push(v);
                count++;
                result.push_back(v);
                }
            }
          }
        if(count==n)  return result;
        return {};
    }
};
